// Generated by CoffeeScript 1.3.3
(function() {
  var l10,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  window.l = function(string) {
    return string.toLocaleString();
  };

  l10 = (function() {

    l10.classes = [];

    function l10() {
      var cookieValue;
      this.labels = ['language'];
      l10.init(this);
      this.languages = [
        {
          code: 'en',
          name: 'English'
        }, {
          code: 'fr',
          name: 'Francais'
        }, {
          code: 'es',
          name: 'Espanol'
        }
      ];
      cookieValue = $.cookie('_language');
      this.selectedLanguage = ko.observable(cookieValue ? cookieValue : '');
      this.languageChanged(null);
    }

    l10.prototype.languageChanged = function(event) {
      $.cookie('_language', this.selectedLanguage(), {
        expires: 50
      });
      String.locale = this.selectedLanguage();
      return l10.updateLocale();
    };

    l10.init = function(clazz) {
      var cname, label, _i, _len, _ref;
      if (__indexOf.call(l10.classes, clazz) < 0) {
        l10.classes.push(clazz);
      }
      cname = clazz.constructor.toString().match(/function\s*(\w+)/)[1];
      _ref = clazz.labels;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        label = _ref[_i];
        clazz["l_" + label] = ko.observable(l("" + cname + "." + label));
      }
      return null;
    };

    l10.updateLocale = function() {
      var clazz, cname, label, _i, _len, _ref, _results;
      _ref = l10.classes;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        clazz = _ref[_i];
        cname = clazz.constructor.toString().match(/function\s*(\w+)/)[1];
        _results.push((function() {
          var _j, _len1, _ref1, _results1;
          _ref1 = clazz.labels;
          _results1 = [];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            label = _ref1[_j];
            _results1.push(clazz["l_" + label](l("" + cname + "." + label)));
          }
          return _results1;
        })());
      }
      return _results;
    };

    return l10;

  })();

  $(function() {
    var localeHandler;
    window.l10 = l10;
    localeHandler = new l10;
    if ($('[id=languageForm]').length > 0) {
      ko.applyBindings(localeHandler, $('#languageForm').get(0));
    }
    if (typeof Function.empty === 'undefined') {
      Function.empty = function() {};
    }
    if (typeof window.console === 'undefined') {
      return window.console = {
        'log': Function.empty,
        'debug': Function.empty,
        'info': Function.empty,
        'warn': Function.empty,
        'error': Function.empty,
        'assert': Function.empty,
        'dir': Function.empty,
        'dirxml': Function.empty,
        'trace': Function.empty,
        'group': Function.empty,
        'groupCollapsed': Function.empty,
        'groupEnd': Function.empty,
        'time': Function.empty,
        'timeEnd': Function.empty,
        'profile': Function.empty,
        'profileEnd': Function.empty,
        'count': Function.empty
      };
    }
  });

}).call(this);
